{"ast":null,"code":"import _objectSpread from \"/home/nishit/WEbsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/nishit/WEbsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nishit/WEbsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/nishit/WEbsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/nishit/WEbsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/nishit/WEbsite/src/Document/Document.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Scrollbars } from \"rc-scrollbars\";\nimport \"./Document.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar table = {\n  Sheet1: [{\n    \"Subroutine Name\": \"y_set()\",\n    \"Time Complexity\": \"O(n*logn)\",\n    Explanation: \"iterating through the set of rectangles of size n, and insertion of each of them takes O(logn) time\"\n  }, {\n    \"Subroutine Name\": \"Y_partition()\",\n    \"Time Complexity\": \"O(n*logn)\",\n    Explanation: \"Iteration through all y_cordinates takes O(n) and in each iteration we insert into a priority queue O(logn)\"\n  }, {\n    \"Subroutine Name\": \"findFrame()\",\n    \"Time Complexity\": \"O(n)\",\n    Explanation: \"iterates through all the rectangles and finds the minimum and maximum y and x coordinates\"\n  }, {\n    \"Subroutine Name\": \"set_intersection()\",\n    \"Time Complexity\": \"O(n)\",\n    Explanation: \"Exploits the fact that the sets are in sorted order, and uses the two pointer approach to find intersection\"\n  }, {\n    \"Subroutine Name\": \"set_difference()\",\n    \"Time Complexity\": \"O(n)\",\n    Explanation: \"Exploits the fact that the sets are in sorted order, and uses the two pointer approach to find intersection\"\n  }, {\n    \"Subroutine Name\": \"set_union()\",\n    \"Time Complexity\": \"O(n)\",\n    Explanation: \"Adds all elements excluding the duplicates\"\n  }, {\n    \"Subroutine Name\": \"copy()\",\n    \"Time Complexity\": \"O(n*logn)\",\n    Explanation: \"Takes the intervals(sorted) and the stripes(sorted) and uses two pointer O(n) to find the optimum stripe and then insert into set in O(logn)\"\n  }, {\n    \"Subroutine Name\": \"blacken()\",\n    \"Time Complexity\": \"O(n*logn)\",\n    Explanation: \"Takes the intervals(sorted) and the stripes(sorted) and uses two pointer O(n) to find the optimum stripe to update x_union and then insert into set in O(logn)\"\n  }, {\n    \"Subroutine Name\": \"concat()\",\n    \"Time Complexity\": \"O(n*logn)\",\n    Explanation: \"Takes advantage of the ordering of stripes and partitions to update the x_union in O(n) and insert in O(logn),\"\n  }, {\n    \"Subroutine Name\": \"stripes()\",\n    \"Time Complexity\": \"O(n*logn*logn)\",\n    Explanation: \"T(n)= 2*T(n/2) + O(n*logn)\\n2*T(n/2) - call for stripes for left and right vertical edges\\nO(n*logn) - bottleneck caused due to concat() / blacken() / copy() . All are O(n*logn) operations.\"\n  }, {\n    \"Subroutine Name\": \"rectangle_DAC()\",\n    \"Time Complexity\": \"O(n*logn) + O(n*logn*logn)\",\n    Explanation: \"Divides the set of vertical edges of the rectangle into two equal sets L and R O(nlogn), and calls the stripes algorithm on this initial division of vertices. The stripes algorithm called inside will take O(nlogn *logn). Returns the final set of vertices to the main function.\"\n  }]\n};\n\nvar Document = /*#__PURE__*/function (_React$Component) {\n  _inherits(Document, _React$Component);\n\n  var _super = _createSuper(Document);\n\n  function Document() {\n    var _this;\n\n    _classCallCheck(this, Document);\n\n    _this = _super.call(this);\n    _this.state = {\n      height: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Document, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        height: window.innerHeight\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(Scrollbars, {\n        disableDefaultStyles: true,\n        renderThumbHorizontal: function renderThumbHorizontal(props) {\n          return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n            className: \"vertical\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, _this2);\n        },\n        renderThumbVertical: function renderThumbVertical(props) {\n          return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n            className: \"vertical\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }, _this2);\n        },\n        style: {\n          width: \"fill\",\n          height: this.state.height * 0.9\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"white\",\n              textAlign: \"center\",\n              margin: \"20px\"\n            },\n            children: [\"Calculating the Time Complexity\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                margin: \"20px\"\n              },\n              children: \"The Complexity Analysis for the common subroutines involved in our implementation of Guting\\u2019s algorithm for the Measure problem and Contour problem:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-3\",\n                style: {\n                  border: \"solid\",\n                  borderWidth: \"1px\",\n                  borderColor: \"tomato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\"\n                },\n                children: \"Subroutine Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col-3\",\n                style: {\n                  border: \"solid\",\n                  borderWidth: \"1px\",\n                  borderColor: \"tomato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\"\n                },\n                children: \"Time Complexity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col\",\n                style: {\n                  border: \"solid\",\n                  borderWidth: \"1px\",\n                  borderColor: \"tomato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\"\n                },\n                children: \"Explanation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), table.Sheet1.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-3\",\n                  style: {\n                    border: \"solid\",\n                    borderWidth: \"1px\",\n                    borderColor: \"tomato\"\n                  },\n                  children: item[\"Subroutine Name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-3\",\n                  style: {\n                    border: \"solid\",\n                    borderWidth: \"1px\",\n                    borderColor: \"tomato\"\n                  },\n                  children: item[\"Time Complexity\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col\",\n                  style: {\n                    border: \"solid\",\n                    borderWidth: \"1px\",\n                    borderColor: \"tomato\"\n                  },\n                  children: item.Explanation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, _this2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, _this2);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Additional Subroutine for Measure problem:-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"measure() - O(n) -\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 17\n                }, this), \" \", \"iterates through all the stripes and computes the total\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: \"bold\",\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Overall Time Complexity for Measure Problem:-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"= Taking input from user + findFrame() + rectangle_DAC() + measure()\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"= O(n) + O(n) + O(n*logn*logn) + O(n)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"= O(n*logn*logn)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Additional Subroutine for Contour problem:-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"contour() - O(n) -\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 17\n                }, this), \"iterates through all the stripes and computes the total measure\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: [\"contour_pieces() - O() -\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this), \"measure\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: \"bold\",\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Overall Time Complexity for Contour Problem:-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"= Taking input from user + findFrame() + rectangle_DAC() + contour()\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"= O(n) + O(n) + O(n*logn*logn) + O(n))\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"= O(n*logn*logn)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Document;\n}(React.Component);\n\nexport default Document;","map":{"version":3,"sources":["/home/nishit/WEbsite/src/Document/Document.js"],"names":["React","styled","Scrollbars","table","Sheet1","Explanation","Document","state","height","setState","window","innerHeight","props","width","color","textAlign","margin","border","borderWidth","borderColor","fontSize","fontWeight","map","item","index","marginTop","marginBottom","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Scrollbars } from \"rc-scrollbars\";\nimport \"./Document.css\";\nlet table = {\n  Sheet1: [\n    {\n      \"Subroutine Name\": \"y_set()\",\n      \"Time Complexity\": \"O(n*logn)\",\n      Explanation:\n        \"iterating through the set of rectangles of size n, and insertion of each of them takes O(logn) time\"\n    },\n    {\n      \"Subroutine Name\": \"Y_partition()\",\n      \"Time Complexity\": \"O(n*logn)\",\n      Explanation:\n        \"Iteration through all y_cordinates takes O(n) and in each iteration we insert into a priority queue O(logn)\"\n    },\n    {\n      \"Subroutine Name\": \"findFrame()\",\n      \"Time Complexity\": \"O(n)\",\n      Explanation:\n        \"iterates through all the rectangles and finds the minimum and maximum y and x coordinates\"\n    },\n    {\n      \"Subroutine Name\": \"set_intersection()\",\n      \"Time Complexity\": \"O(n)\",\n      Explanation:\n        \"Exploits the fact that the sets are in sorted order, and uses the two pointer approach to find intersection\"\n    },\n    {\n      \"Subroutine Name\": \"set_difference()\",\n      \"Time Complexity\": \"O(n)\",\n      Explanation:\n        \"Exploits the fact that the sets are in sorted order, and uses the two pointer approach to find intersection\"\n    },\n    {\n      \"Subroutine Name\": \"set_union()\",\n      \"Time Complexity\": \"O(n)\",\n      Explanation: \"Adds all elements excluding the duplicates\"\n    },\n    {\n      \"Subroutine Name\": \"copy()\",\n      \"Time Complexity\": \"O(n*logn)\",\n      Explanation:\n        \"Takes the intervals(sorted) and the stripes(sorted) and uses two pointer O(n) to find the optimum stripe and then insert into set in O(logn)\"\n    },\n    {\n      \"Subroutine Name\": \"blacken()\",\n      \"Time Complexity\": \"O(n*logn)\",\n      Explanation:\n        \"Takes the intervals(sorted) and the stripes(sorted) and uses two pointer O(n) to find the optimum stripe to update x_union and then insert into set in O(logn)\"\n    },\n    {\n      \"Subroutine Name\": \"concat()\",\n      \"Time Complexity\": \"O(n*logn)\",\n      Explanation:\n        \"Takes advantage of the ordering of stripes and partitions to update the x_union in O(n) and insert in O(logn),\"\n    },\n    {\n      \"Subroutine Name\": \"stripes()\",\n      \"Time Complexity\": \"O(n*logn*logn)\",\n      Explanation:\n        \"T(n)= 2*T(n/2) + O(n*logn)\\n2*T(n/2) - call for stripes for left and right vertical edges\\nO(n*logn) - bottleneck caused due to concat() / blacken() / copy() . All are O(n*logn) operations.\"\n    },\n    {\n      \"Subroutine Name\": \"rectangle_DAC()\",\n      \"Time Complexity\": \"O(n*logn) + O(n*logn*logn)\",\n      Explanation:\n        \"Divides the set of vertical edges of the rectangle into two equal sets L and R O(nlogn), and calls the stripes algorithm on this initial division of vertices. The stripes algorithm called inside will take O(nlogn *logn). Returns the final set of vertices to the main function.\"\n    }\n  ]\n};\n\nclass Document extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: \"\"\n    };\n  }\n  componentDidMount() {\n    this.setState({ height: window.innerHeight });\n  }\n  render() {\n    return (\n      <Scrollbars\n        disableDefaultStyles\n        renderThumbHorizontal={(props) => (\n          <div {...props} className=\"vertical\" />\n        )}\n        renderThumbVertical={(props) => <div {...props} className=\"vertical\" />}\n        style={{ width: \"fill\", height: this.state.height * 0.9 }}\n      >\n        <div style={{ color: \"white\" }}>\n          <h1 style={{ color: \"white\", textAlign: \"center\", margin: \"20px\" }}>\n            Calculating the Time Complexity{\" \"}\n          </h1>\n\n          <div class=\"container\">\n            <h2 style={{ margin: \"20px\" }}>\n              The Complexity Analysis for the common subroutines involved in our\n              implementation of Guting’s algorithm for the Measure problem and\n              Contour problem:\n            </h2>\n            <div class=\"row\">\n              <div\n                class=\"col-3\"\n                style={{\n                  border: \"solid\",\n                  borderWidth: \"1px\",\n                  borderColor: \"tomato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                Subroutine Name\n              </div>\n              <div\n                class=\"col-3\"\n                style={{\n                  border: \"solid\",\n                  borderWidth: \"1px\",\n                  borderColor: \"tomato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                Time Complexity\n              </div>\n              <div\n                class=\"col\"\n                style={{\n                  border: \"solid\",\n                  borderWidth: \"1px\",\n                  borderColor: \"tomato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                Explanation\n              </div>\n            </div>\n            {table.Sheet1.map((item, index) => {\n              return (\n                <div class=\"row\">\n                  <div\n                    class=\"col-3\"\n                    style={{\n                      border: \"solid\",\n                      borderWidth: \"1px\",\n                      borderColor: \"tomato\"\n                    }}\n                  >\n                    {item[\"Subroutine Name\"]}\n                  </div>\n                  <div\n                    class=\"col-3\"\n                    style={{\n                      border: \"solid\",\n                      borderWidth: \"1px\",\n                      borderColor: \"tomato\"\n                    }}\n                  >\n                    {item[\"Time Complexity\"]}\n                  </div>\n                  <div\n                    class=\"col\"\n                    style={{\n                      border: \"solid\",\n                      borderWidth: \"1px\",\n                      borderColor: \"tomato\"\n                    }}\n                  >\n                    {item.Explanation}\n                  </div>\n                </div>\n              );\n            })}\n            <div\n              style={{\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              }}\n            >\n              <h2 style={{ fontWeight: \"bold\" }}>\n                Additional Subroutine for Measure problem:-\n              </h2>\n              <h4>\n                <span style={{ fontWeight: \"bold\" }}>measure() - O(n) -</span>{\" \"}\n                iterates through all the stripes and computes the total\n              </h4>\n            </div>\n            <div\n              style={{\n                fontWeight: \"bold\",\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              }}\n            >\n              <h2 style={{ fontWeight: \"bold\" }}>\n                Overall Time Complexity for Measure Problem:-\n              </h2>\n              <h5>\n                = Taking input from user + findFrame() + rectangle_DAC() +\n                measure()\n              </h5>\n              <h5>= O(n) + O(n) + O(n*logn*logn) + O(n)</h5>\n              <h5>= O(n*logn*logn)</h5>\n            </div>\n            <div\n              style={{\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              }}\n            >\n              <h2 style={{ fontWeight: \"bold\" }}>\n                Additional Subroutine for Contour problem:-\n              </h2>\n              <h5>\n                <span style={{ fontWeight: \"bold\" }}>contour() - O(n) -</span>\n                iterates through all the stripes and computes the total measure{\" \"}\n              </h5>\n              <h5>\n                <span style={{ fontWeight: \"bold\" }}>\n                  contour_pieces() - O() -{\" \"}\n                </span>\n                measure{\" \"}\n              </h5>\n            </div>\n            <div\n              style={{\n                fontWeight: \"bold\",\n                marginTop: \"40px\",\n                marginBottom: \"40px\"\n              }}\n            >\n              <h2 style={{ fontWeight: \"bold\" }}>\n                Overall Time Complexity for Contour Problem:-\n              </h2>\n              <h5>\n                = Taking input from user + findFrame() + rectangle_DAC() +\n                contour()\n              </h5>\n              <h5>= O(n) + O(n) + O(n*logn*logn) + O(n))</h5>\n              <h5>= O(n*logn*logn)</h5>\n            </div>\n          </div>\n        </div>\n      </Scrollbars>\n    );\n  }\n}\n\nexport default Document;\n"]},"metadata":{},"sourceType":"module"}